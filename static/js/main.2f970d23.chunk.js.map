{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/FindMovie/FindMovie.js","api/api.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","key","imdbId","FindMovie","addMovie","useState","setTitle","setMovie","notFound","setNotFound","htmlFor","type","id","placeholder","value","onChange","event","target","onClick","fetch","then","response","json","catch","error","alert","getMovie","isMovieFind","Response","Title","Plot","Poster","imdbID","App","data","setMovies","newMovie","some","ReactDOM","render","document","getElementById"],"mappings":"8wEAIaA,G,kBAAY,SAAC,GAAD,IACvBC,EADuB,EACvBA,MADuB,IAEvBC,mBAFuB,MAET,GAFS,EAGvBC,EAHuB,EAGvBA,OACAC,EAJuB,EAIvBA,QAJuB,OAMvB,yBAAKC,UAAU,QACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,iBAChB,yBACEC,IAAKH,EACLI,IAAI,gBAIV,yBAAKF,UAAU,gBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAChB,yBACEC,IAAI,wBACJC,IAAI,WAIV,yBAAKF,UAAU,iBACb,uBAAGA,UAAU,cAAcJ,KAI/B,yBAAKI,UAAU,WACZH,EACD,6BACA,uBAAGM,KAAMJ,GAAT,aC/BKK,EAAa,SAAC,GAAD,QACxBC,cADwB,MACf,GADe,SAGxB,yBAAKL,UAAU,UACZK,EAAOC,KAAI,SAAAC,GAAK,OACf,kBAAC,EAAD,eAAWC,IAAKD,EAAME,QAAYF,S,UCH3BG,EAAY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC1B,EAA0BC,mBAAS,IAAnC,mBAAOhB,EAAP,KAAciB,EAAd,KACA,EAA0BD,mBAAS,MAAnC,mBAAOL,EAAP,KAAcO,EAAd,KACA,EAAgCF,oBAAS,GAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KAuBA,OACE,oCACE,0BACEhB,UAAU,cAEV,yBAAKA,UAAU,SACb,2BAAOA,UAAU,QAAQiB,QAAQ,eAAjC,eAIA,yBAAKjB,UAAU,WACb,2BACEkB,KAAK,OACLC,GAAG,cACHC,YAAY,0BACZpB,UAAU,kBACVqB,MAAOzB,EACP0B,SAAU,SAACC,GACTV,EAASU,EAAMC,OAAOH,OACtBL,GAAY,OAKhBD,GACE,uBAAGf,UAAU,kBAAb,yCAON,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,WACb,4BACEkB,KAAK,SACLlB,UAAU,kBACVyB,QA1DM,YCXb,SAAkB7B,GACvB,OAAO8B,MAAM,GAAD,OAHF,2CAGE,cAAa9B,IACtB+B,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BC,OAAM,SAAAC,GAAK,OAAIC,MAAMD,MAAM,QAASA,ODSrCE,CAASrC,GACN+B,MAAK,SAACO,GACwB,UAAzBA,EAAYC,UAMhBnB,GAAY,GAEZF,EAAS,CACPlB,MAAOsC,EAAYE,MACnBvC,YAAaqC,EAAYG,KACzBvC,OAAQoC,EAAYI,OACpBvC,QAAQ,8BAAD,OAAgCmC,EAAYK,OAA5C,KACP9B,OAAQyB,EAAYK,UAZpBvB,GAAY,QAmDV,iBASF,yBAAKhB,UAAU,WACb,4BACEyB,QAAS,WACPd,EAASJ,GACTO,EAAS,OAEXI,KAAK,SACLlB,UAAU,qBANZ,sBAcN,yBAAKA,UAAU,aACb,wBAAIA,UAAU,SAAd,WAEEO,GACE,kBAAC,EAAcA,M,OE1FdiC,EAAM,WACjB,MAA4B5B,mBAAS,YAAI6B,IAAzC,mBAAOpC,EAAP,KAAeqC,EAAf,KAUA,OACE,yBAAK1C,UAAU,QACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CAAYK,OAAQA,KAEtB,yBAAKL,UAAU,WACb,kBAAC,EAAD,CAAWW,SAdA,SAACgC,GACZtC,EAAOuC,MAAK,SAAArC,GAAK,OAAIA,EAAME,SAAWkC,EAASlC,WAInDiC,EAAU,GAAD,mBAAKrC,GAAL,CAAasC,WCT1BE,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.2f970d23.chunk.js","sourcesContent":["import React from 'react';\r\nimport './MovieCard.scss';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const MovieCard = ({\r\n  title,\r\n  description = '',\r\n  imgUrl,\r\n  imdbUrl,\r\n}) => (\r\n  <div className=\"card\">\r\n    <div className=\"card-image\">\r\n      <figure className=\"image is-4by3\">\r\n        <img\r\n          src={imgUrl}\r\n          alt=\"Film logo\"\r\n        />\r\n      </figure>\r\n    </div>\r\n    <div className=\"card-content\">\r\n      <div className=\"media\">\r\n        <div className=\"media-left\">\r\n          <figure className=\"image is-48x48\">\r\n            <img\r\n              src=\"images/imdb-logo.jpeg\"\r\n              alt=\"imdb\"\r\n            />\r\n          </figure>\r\n        </div>\r\n        <div className=\"media-content\">\r\n          <p className=\"title is-8\">{title}</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"content\">\r\n        {description}\r\n        <br />\r\n        <a href={imdbUrl}>IMDB</a>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nMovieCard.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  description: PropTypes.string.isRequired,\r\n  imgUrl: PropTypes.string.isRequired,\r\n  imdbUrl: PropTypes.string.isRequired,\r\n};\r\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbId: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { getMovie } from '../../api/api';\n\nimport './FindMovie.scss';\n\nimport { MovieCard } from '../MovieCard';\n\nexport const FindMovie = ({ addMovie }) => {\n  const [title, setTitle] = useState('');\n  const [movie, setMovie] = useState(null);\n  const [notFound, setNotFound] = useState(false);\n\n  const findMovie = () => {\n    getMovie(title)\n      .then((isMovieFind) => {\n        if (isMovieFind.Response === 'False') {\n          setNotFound(true);\n\n          return;\n        }\n\n        setNotFound(false);\n\n        setMovie({\n          title: isMovieFind.Title,\n          description: isMovieFind.Plot,\n          imgUrl: isMovieFind.Poster,\n          imdbUrl: `https://www.imdb.com/title/${isMovieFind.imdbID}/`,\n          imdbId: isMovieFind.imdbID,\n        });\n      });\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-danger\"\n              value={title}\n              onChange={(event) => {\n                setTitle(event.target.value);\n                setNotFound(false);\n              }}\n            />\n          </div>\n          {\n            notFound && (\n              <p className=\"help is-danger\">\n                Can&apos;t find a movie with such a title\n              </p>\n            )\n          }\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={findMovie}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              onClick={() => {\n                addMovie(movie);\n                setMovie(null);\n              }}\n              type=\"button\"\n              className=\"button is-primary\"\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {\n          movie && (\n            <MovieCard {...movie} />\n          )\n        }\n      </div>\n    </>\n  );\n};\n\nFindMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","const url = 'https://www.omdbapi.com/?apikey=3ba262ba';\n\nexport function getMovie(title) {\n  return fetch(`${url}&t=${title}`)\n    .then(response => response.json())\n    .catch(error => alert.error('Error', error));\n}\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport const App = () => {\n  const [movies, setMovies] = useState([...data]);\n\n  const addMovie = (newMovie) => {\n    if (movies.some(movie => movie.imdbId === newMovie.imdbId)) {\n      return;\n    }\n\n    setMovies([...movies, newMovie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie addMovie={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bulma/css/bulma.css';\r\nimport { App } from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}